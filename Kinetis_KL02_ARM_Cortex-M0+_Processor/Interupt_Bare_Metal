#include <stdio.h>
//#include "board.h"
//#include "peripherals.h"
//#include "pin_mux.h"
//#include "clock_config.h"
#include "MKL02Z4.h"
//#include "fsl_debug_console.h"
/* TODO: insert other include files here. */

/* TODO: insert other definitions and declarations here. */

typedef struct {
	uint32_t PCR[32];
}PORTRegs_t;

#define PORT_B ((PORTRegs_t *)0x4004A000)
#define PORT_A ((PORTRegs_t *)0x40049000)

typedef struct {
	uint32_t PDOR;
	uint32_t PSOR;
	uint32_t PCOR;
	uint32_t PTOR;
	uint32_t PDIR;
	uint32_t PDDR;
}GPIORegs_t;


#define GPIO_B ((GPIORegs_t *)0x400FF040)
#define GPIO_A ((GPIORegs_t *)0x400FF000)

typedef struct {
	uint32_t iser[1];
	uint32_t rsvd[31];
	uint32_t icer[1];
	uint32_t rsvd1[31];
	uint32_t ispr[1];
	uint32_t rsvd2[31];
	uint32_t icpr[1];
	uint32_t rsvd3[31];
	uint32_t rsvd4[64];
	uint32_t ipr[8];
}NVIC_Regs_t;

#define NVIC_REG ((NVIC_Regs_t *)0xE000E100)

void PORTA_IRQHandler(void)
{
	if(GPIO_A->PDIR & (1<<11)) {
		/* Make the LED as OFF */
		GPIO_B->PSOR = (1 << 6);
	}else{
		/* Make the LED as ON */
		GPIO_B->PCOR = (1 << 6);
	}

	/* W1C on Interrupt Status Flag of PORTD 4 */
	PORT_A->PCR[11] = PORT_A->PCR[11] | (1 << 24);
}

/*
 * @brief   Application entry point.
 */
int main(void) {
	/* Enable clock for PORTC & PORTD */
	SIM->SCGC5 = (1 << 10) | (1 << 9);

	/* Configure LED PORTC 8 as GPIO */
	PORT_B->PCR[6] = (1 << 8);

	/* Configure Switch PORTD_4 for switch GPIO / Pull Enable / Pull UP */
	PORT_A->PCR[11] |= (1 << 8) | (1 << 1) | (1 << 0) | (0xb << 16);

	/* Configure LED PORTC 8 as Output */
	GPIO_B->PDDR = (1 << 6);

	/* Make the LED as OFF */
	GPIO_B->PSOR = (1 << 6);

	/* Enable Interrupt for PORTD */
	NVIC_REG->iser[0] = (1 << 30);

	while(1) {
	}
    return 0 ;
}
